/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var pb_payload_pb = require('../pb/payload_pb.js');
var pb_program_pb = require('../pb/program_pb.js');
goog.exportSymbol('proto.pb.MsgTx', null, global);
goog.exportSymbol('proto.pb.UnsignedTx', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.UnsignedTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.UnsignedTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.UnsignedTx.displayName = 'proto.pb.UnsignedTx';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.UnsignedTx.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.UnsignedTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.UnsignedTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.UnsignedTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && pb_payload_pb.Payload.toObject(includeInstance, f),
    nonce: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fee: jspb.Message.getFieldWithDefault(msg, 3, 0),
    attributes: msg.getAttributes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.UnsignedTx}
 */
proto.pb.UnsignedTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.UnsignedTx;
  return proto.pb.UnsignedTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.UnsignedTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.UnsignedTx}
 */
proto.pb.UnsignedTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pb_payload_pb.Payload;
      reader.readMessage(value,pb_payload_pb.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNonce(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFee(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.UnsignedTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.UnsignedTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.UnsignedTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.UnsignedTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pb_payload_pb.Payload.serializeBinaryToWriter
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getFee();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAttributes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional Payload Payload = 1;
 * @return {?proto.pb.Payload}
 */
proto.pb.UnsignedTx.prototype.getPayload = function() {
  return /** @type{?proto.pb.Payload} */ (
    jspb.Message.getWrapperField(this, pb_payload_pb.Payload, 1));
};


/** @param {?proto.pb.Payload|undefined} value */
proto.pb.UnsignedTx.prototype.setPayload = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.UnsignedTx.prototype.clearPayload = function() {
  this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.pb.UnsignedTx.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 Nonce = 2;
 * @return {number}
 */
proto.pb.UnsignedTx.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.UnsignedTx.prototype.setNonce = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 Fee = 3;
 * @return {number}
 */
proto.pb.UnsignedTx.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.UnsignedTx.prototype.setFee = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes Attributes = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.UnsignedTx.prototype.getAttributes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes Attributes = 4;
 * This is a type-conversion wrapper around `getAttributes()`
 * @return {string}
 */
proto.pb.UnsignedTx.prototype.getAttributes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAttributes()));
};


/**
 * optional bytes Attributes = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAttributes()`
 * @return {!Uint8Array}
 */
proto.pb.UnsignedTx.prototype.getAttributes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAttributes()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.UnsignedTx.prototype.setAttributes = function(value) {
  jspb.Message.setProto3BytesField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.MsgTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.MsgTx.repeatedFields_, null);
};
goog.inherits(proto.pb.MsgTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.MsgTx.displayName = 'proto.pb.MsgTx';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.MsgTx.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.MsgTx.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.MsgTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.MsgTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.MsgTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    unsignedtx: (f = msg.getUnsignedtx()) && proto.pb.UnsignedTx.toObject(includeInstance, f),
    programsList: jspb.Message.toObjectList(msg.getProgramsList(),
    pb_program_pb.Program.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.MsgTx}
 */
proto.pb.MsgTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.MsgTx;
  return proto.pb.MsgTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.MsgTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.MsgTx}
 */
proto.pb.MsgTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.UnsignedTx;
      reader.readMessage(value,proto.pb.UnsignedTx.deserializeBinaryFromReader);
      msg.setUnsignedtx(value);
      break;
    case 2:
      var value = new pb_program_pb.Program;
      reader.readMessage(value,pb_program_pb.Program.deserializeBinaryFromReader);
      msg.addPrograms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.MsgTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.MsgTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.MsgTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.MsgTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnsignedtx();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.UnsignedTx.serializeBinaryToWriter
    );
  }
  f = message.getProgramsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      pb_program_pb.Program.serializeBinaryToWriter
    );
  }
};


/**
 * optional UnsignedTx UnsignedTx = 1;
 * @return {?proto.pb.UnsignedTx}
 */
proto.pb.MsgTx.prototype.getUnsignedtx = function() {
  return /** @type{?proto.pb.UnsignedTx} */ (
    jspb.Message.getWrapperField(this, proto.pb.UnsignedTx, 1));
};


/** @param {?proto.pb.UnsignedTx|undefined} value */
proto.pb.MsgTx.prototype.setUnsignedtx = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.MsgTx.prototype.clearUnsignedtx = function() {
  this.setUnsignedtx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.pb.MsgTx.prototype.hasUnsignedtx = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Program Programs = 2;
 * @return {!Array<!proto.pb.Program>}
 */
proto.pb.MsgTx.prototype.getProgramsList = function() {
  return /** @type{!Array<!proto.pb.Program>} */ (
    jspb.Message.getRepeatedWrapperField(this, pb_program_pb.Program, 2));
};


/** @param {!Array<!proto.pb.Program>} value */
proto.pb.MsgTx.prototype.setProgramsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pb.Program=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Program}
 */
proto.pb.MsgTx.prototype.addPrograms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pb.Program, opt_index);
};


proto.pb.MsgTx.prototype.clearProgramsList = function() {
  this.setProgramsList([]);
};


goog.object.extend(exports, proto.pb);
